name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
  merge_group:
  push:
    branches:
      - main

jobs:
  ci-tests:
    name: "Run tests"
    runs-on: warp-ubuntu-2204-x64-8x
    timeout-minutes: 60
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Rust dependencies
        uses: WarpBuilds/rust-cache@v2
        with:
          cache-on-failure: true
          cache-all-crates: true

      - name: Run clippy fmt
        run: |
          CARGO_TARGET_DIR="target/clippy" \
          RUSTFLAGS="-D warnings" \
          cargo clippy --all-features --all-targets --locked

      - name: Run Cargo fmt
        run: |
          cargo fmt -- --check

      - name: Install cargo-nextest
        run: cargo install cargo-nextest

      - name: Run cargo-nextest
        run: cargo nextest run --locked --all-features --cargo-profile test-release

      - name: Run cargo test debug
        run: cargo test --locked --all-features --all-targets

  ci-coverage:
    name: Coverage
    runs-on: warp-ubuntu-2204-x64-8x
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache Rust dependencies
        uses: WarpBuilds/rust-cache@v2
        with:
          cache-on-failure: true
          cache-all-crates: true
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install cargo-nextest
        run: cargo install cargo-nextest
      - name: Generate code coverage
        run: cargo llvm-cov nextest --cargo-profile test-release --all-features --workspace --codecov --output-path codecov.json
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov.json
          fail_ci_if_error: false

